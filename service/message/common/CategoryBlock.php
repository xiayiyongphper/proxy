<?php
namespace service\message\common;

// @@protoc_insertion_point(namespace:.service.message.common.CategoryBlock)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: common/CategoryBlock.proto
 *
 * -*- magic methods -*-
 *
 * @method string getCategoryId()
 * @method void setCategoryId(\string $value)
 * @method string getIcon()
 * @method void setIcon(\string $value)
 * @method string getTextColor()
 * @method void setTextColor(\string $value)
 * @method string getName()
 * @method void setName(\string $value)
 * @method array getProducts()
 * @method void appendProducts(\service\message\common\Product $value)
 * @method array getLeftImages()
 * @method void appendLeftImages(\service\message\common\Image $value)
 * @method array getRightImages()
 * @method void appendRightImages(\service\message\common\Image $value)
 * @method array getChildCategory()
 * @method void appendChildCategory(\service\message\common\CategoryNode $value)
 */
class CategoryBlock extends \ProtocolBuffers\Message
{
  // @@protoc_insertion_point(traits:.service.message.common.CategoryBlock)
  
  /**
   * @var string $category_id
   * @tag 1
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $category_id;
  
  /**
   * @var string $icon
   * @tag 2
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $icon;
  
  /**
   * @var string $text_color
   * @tag 3
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $text_color;
  
  /**
   * @var string $name
   * @tag 4
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $name;
  
  /**
   * @var array $products
   * @tag 5
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\Product
   **/
  protected $products;
  
  /**
   * @var array $left_images
   * @tag 6
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\Image
   **/
  protected $left_images;
  
  /**
   * @var array $right_images
   * @tag 7
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\Image
   **/
  protected $right_images;
  
  /**
   * @var array $child_category
   * @tag 8
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\CategoryNode
   **/
  protected $child_category;
  
  
  // @@protoc_insertion_point(properties_scope:.service.message.common.CategoryBlock)

  // @@protoc_insertion_point(class_scope:.service.message.common.CategoryBlock)

  /**
   * get descriptor for protocol buffers
   * 
   * @return \ProtocolBuffersDescriptor
   */
  public static function getDescriptor()
  {
    static $descriptor;
    
    if (!isset($descriptor)) {
      $desc = new \ProtocolBuffers\DescriptorBuilder();
      $desc->addField(1, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "category_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(2, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "icon",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(3, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "text_color",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(4, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(5, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "products",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\Product',
      )));
      $desc->addField(6, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "left_images",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\Image',
      )));
      $desc->addField(7, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "right_images",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\Image',
      )));
      $desc->addField(8, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "child_category",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\CategoryNode',
      )));
      // @@protoc_insertion_point(builder_scope:.service.message.common.CategoryBlock)

      $descriptor = $desc->build();
    }
    return $descriptor;
  }

}
