<?php
namespace service\message\common;

// @@protoc_insertion_point(namespace:.service.message.common.Order)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: common/Order.proto
 *
 * -*- magic methods -*-
 *
 * @method string getOrderId()
 * @method void setOrderId(\string $value)
 * @method string getStatus()
 * @method void setStatus(\string $value)
 * @method string getStatusLabel()
 * @method void setStatusLabel(\string $value)
 * @method string getWholesalerId()
 * @method void setWholesalerId(\string $value)
 * @method string getWholesalerName()
 * @method void setWholesalerName(\string $value)
 * @method string getPaymentMethod()
 * @method void setPaymentMethod(\string $value)
 * @method string getCouponCode()
 * @method void setCouponCode(\string $value)
 * @method string getIncrementId()
 * @method void setIncrementId(\string $value)
 * @method string getGrandTotal()
 * @method void setGrandTotal(\string $value)
 * @method array getItems()
 * @method void appendItems(\service\message\common\OrderItem $value)
 * @method string getAddress()
 * @method void setAddress(\string $value)
 * @method string getComment()
 * @method void setComment(\string $value)
 * @method string getCreatedAt()
 * @method void setCreatedAt(\string $value)
 * @method string getName()
 * @method void setName(\string $value)
 * @method string getPhone()
 * @method void setPhone(\string $value)
 * @method string getImage()
 * @method void setImage(\string $value)
 * @method array getStorePhone()
 * @method void appendStorePhone(\string $value)
 * @method \service\message\common\Totals getTotals()
 * @method void setTotals(\service\message\common\Totals $value)
 * @method string getWholesalerDeliveryTime()
 * @method void setWholesalerDeliveryTime(\string $value)
 * @method array getHistory()
 * @method void appendHistory(\service\message\common\StatusHistory $value)
 * @method string getPromoInfo()
 * @method void setPromoInfo(\string $value)
 * @method string getShippingAmount()
 * @method void setShippingAmount(\string $value)
 * @method string getState()
 * @method void setState(\string $value)
 * @method string getTotalQtyOrdered()
 * @method void setTotalQtyOrdered(\string $value)
 * @method array getPromotions()
 * @method void appendPromotions(\service\message\common\PromotionInfo $value)
 * @method string getStoreName()
 * @method void setStoreName(\string $value)
 * @method string getAutoScriptTip()
 * @method void setAutoScriptTip(\string $value)
 * @method string getWholesalerDeliveryText()
 * @method void setWholesalerDeliveryText(\string $value)
 * @method string getBalance()
 * @method void setBalance(\string $value)
 * @method string getRebates()
 * @method void setRebates(\string $value)
 * @method \service\message\common\Tag getTag()
 * @method void setTag(\service\message\common\Tag $value)
 * @method string getCustomerId()
 * @method void setCustomerId(\string $value)
 * @method string getCustomerName()
 * @method void setCustomerName(\string $value)
 * @method \service\message\common\TagGroup getAppliedRules()
 * @method void setAppliedRules(\service\message\common\TagGroup $value)
 * @method string getReceipt()
 * @method void setReceipt(\string $value)
 * @method string getContractorId()
 * @method void setContractorId(\string $value)
 * @method string getContractor()
 * @method void setContractor(\string $value)
 */
class Order extends \ProtocolBuffers\Message
{
  // @@protoc_insertion_point(traits:.service.message.common.Order)
  
  /**
   * @var string $order_id
   * @tag 1
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $order_id;
  
  /**
   * @var string $status
   * @tag 2
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $status;
  
  /**
   * @var string $status_label
   * @tag 3
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $status_label;
  
  /**
   * @var string $wholesaler_id
   * @tag 4
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $wholesaler_id;
  
  /**
   * @var string $wholesaler_name
   * @tag 5
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $wholesaler_name;
  
  /**
   * @var string $payment_method
   * @tag 6
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $payment_method;
  
  /**
   * @var string $coupon_code
   * @tag 7
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $coupon_code;
  
  /**
   * @var string $increment_id
   * @tag 8
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $increment_id;
  
  /**
   * @var string $grand_total
   * @tag 9
   * @label optional
   * @type \ProtocolBuffers::TYPE_FLOAT
   **/
  protected $grand_total;
  
  /**
   * @var array $items
   * @tag 10
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\OrderItem
   **/
  protected $items;
  
  /**
   * @var string $address
   * @tag 11
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $address;
  
  /**
   * @var string $comment
   * @tag 12
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $comment;
  
  /**
   * @var string $created_at
   * @tag 13
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $created_at;
  
  /**
   * @var string $name
   * @tag 14
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $name;
  
  /**
   * @var string $phone
   * @tag 15
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $phone;
  
  /**
   * @var string $image
   * @tag 16
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $image;
  
  /**
   * @var array $store_phone
   * @tag 17
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $store_phone;
  
  /**
   * @var \service\message\common\Totals $totals
   * @tag 18
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   **/
  protected $totals;
  
  /**
   * @var string $wholesaler_delivery_time
   * @tag 19
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $wholesaler_delivery_time;
  
  /**
   * @var array $history
   * @tag 20
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\StatusHistory
   **/
  protected $history;
  
  /**
   * @var string $promo_info
   * @tag 21
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $promo_info;
  
  /**
   * @var string $shipping_amount
   * @tag 22
   * @label optional
   * @type \ProtocolBuffers::TYPE_FLOAT
   **/
  protected $shipping_amount;
  
  /**
   * @var string $state
   * @tag 23
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $state;
  
  /**
   * @var string $total_qty_ordered
   * @tag 24
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $total_qty_ordered;
  
  /**
   * @var array $promotions
   * @tag 25
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\PromotionInfo
   **/
  protected $promotions;
  
  /**
   * @var string $store_name
   * @tag 26
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $store_name;
  
  /**
   * @var string $auto_script_tip
   * @tag 27
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $auto_script_tip;
  
  /**
   * @var string $wholesaler_delivery_text
   * @tag 28
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $wholesaler_delivery_text;
  
  /**
   * @var string $balance
   * @tag 29
   * @label optional
   * @type \ProtocolBuffers::TYPE_FLOAT
   **/
  protected $balance;
  
  /**
   * @var string $rebates
   * @tag 30
   * @label optional
   * @type \ProtocolBuffers::TYPE_FLOAT
   **/
  protected $rebates;
  
  /**
   * @var \service\message\common\Tag $tag
   * @tag 31
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   **/
  protected $tag;
  
  /**
   * @var string $customer_id
   * @tag 32
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $customer_id;
  
  /**
   * @var string $customer_name
   * @tag 33
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $customer_name;
  
  /**
   * @var \service\message\common\TagGroup $applied_rules
   * @tag 34
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   **/
  protected $applied_rules;
  
  /**
   * @var string $receipt
   * @tag 35
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT32
   **/
  protected $receipt;
  
  /**
   * @var string $contractor_id
   * @tag 36
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $contractor_id;
  
  /**
   * @var string $contractor
   * @tag 37
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $contractor;
  
  
  // @@protoc_insertion_point(properties_scope:.service.message.common.Order)

  // @@protoc_insertion_point(class_scope:.service.message.common.Order)

  /**
   * get descriptor for protocol buffers
   * 
   * @return \ProtocolBuffersDescriptor
   */
  public static function getDescriptor()
  {
    static $descriptor;
    
    if (!isset($descriptor)) {
      $desc = new \ProtocolBuffers\DescriptorBuilder();
      $desc->addField(1, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "order_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(2, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "status",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(3, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "status_label",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(4, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "wholesaler_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(5, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "wholesaler_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(6, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "payment_method",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(7, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "coupon_code",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(8, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "increment_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(9, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_FLOAT,
        "name"     => "grand_total",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(10, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "items",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\OrderItem',
      )));
      $desc->addField(11, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "address",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(12, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "comment",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(13, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "created_at",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(14, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(15, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "phone",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(16, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "image",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(17, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "store_phone",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(18, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "totals",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\Totals',
      )));
      $desc->addField(19, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "wholesaler_delivery_time",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(20, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "history",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\StatusHistory',
      )));
      $desc->addField(21, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "promo_info",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(22, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_FLOAT,
        "name"     => "shipping_amount",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(23, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "state",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(24, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "total_qty_ordered",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(25, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "promotions",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\PromotionInfo',
      )));
      $desc->addField(26, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "store_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(27, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "auto_script_tip",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(28, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "wholesaler_delivery_text",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(29, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_FLOAT,
        "name"     => "balance",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(30, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_FLOAT,
        "name"     => "rebates",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(31, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "tag",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\Tag',
      )));
      $desc->addField(32, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "customer_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(33, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "customer_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(34, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "applied_rules",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\TagGroup',
      )));
      $desc->addField(35, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT32,
        "name"     => "receipt",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(36, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "contractor_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(37, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "contractor",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      // @@protoc_insertion_point(builder_scope:.service.message.common.Order)

      $descriptor = $desc->build();
    }
    return $descriptor;
  }

}
