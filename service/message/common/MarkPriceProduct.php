<?php
namespace service\message\common;

// @@protoc_insertion_point(namespace:.service.message.common.MarkPriceProduct)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: common/MarkPriceProduct.proto
 *
 * -*- magic methods -*-
 *
 * @method string getProductId()
 * @method void setProductId(\string $value)
 * @method string getName()
 * @method void setName(\string $value)
 * @method string getPrice()
 * @method void setPrice(\string $value)
 * @method string getBarcode()
 * @method void setBarcode(\string $value)
 * @method string getFirstCategoryId()
 * @method void setFirstCategoryId(\string $value)
 * @method string getLastMarkedTime()
 * @method void setLastMarkedTime(\string $value)
 * @method string getContractorName()
 * @method void setContractorName(\string $value)
 * @method array getHistory()
 * @method void appendHistory(\service\message\common\MarkPriceHistory $value)
 * @method string getImage()
 * @method void setImage(\string $value)
 */
class MarkPriceProduct extends \ProtocolBuffers\Message
{
  // @@protoc_insertion_point(traits:.service.message.common.MarkPriceProduct)
  
  /**
   * @var string $product_id
   * @tag 1
   * @label required
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $product_id;
  
  /**
   * @var string $name
   * @tag 2
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $name;
  
  /**
   * @var string $price
   * @tag 3
   * @label optional
   * @type \ProtocolBuffers::TYPE_FLOAT
   **/
  protected $price;
  
  /**
   * @var string $barcode
   * @tag 4
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $barcode;
  
  /**
   * @var string $first_category_id
   * @tag 5
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $first_category_id;
  
  /**
   * @var string $last_marked_time
   * @tag 6
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $last_marked_time;
  
  /**
   * @var string $contractor_name
   * @tag 7
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $contractor_name;
  
  /**
   * @var array $history
   * @tag 8
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\MarkPriceHistory
   **/
  protected $history;
  
  /**
   * @var string $image
   * @tag 9
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $image;
  
  
  // @@protoc_insertion_point(properties_scope:.service.message.common.MarkPriceProduct)

  // @@protoc_insertion_point(class_scope:.service.message.common.MarkPriceProduct)

  /**
   * get descriptor for protocol buffers
   * 
   * @return \ProtocolBuffersDescriptor
   */
  public static function getDescriptor()
  {
    static $descriptor;
    
    if (!isset($descriptor)) {
      $desc = new \ProtocolBuffers\DescriptorBuilder();
      $desc->addField(1, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "product_id",
        "required" => true,
        "optional" => false,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(2, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(3, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_FLOAT,
        "name"     => "price",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(4, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "barcode",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(5, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "first_category_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(6, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "last_marked_time",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(7, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "contractor_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(8, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "history",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\MarkPriceHistory',
      )));
      $desc->addField(9, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "image",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      // @@protoc_insertion_point(builder_scope:.service.message.common.MarkPriceProduct)

      $descriptor = $desc->build();
    }
    return $descriptor;
  }

}
