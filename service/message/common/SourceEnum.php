<?php
namespace service\message\common;

// @@protoc_insertion_point(namespace:.service.message.common.SourceEnum)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: common/SourceEnum.proto
 *
 */
class SourceEnum extends \ProtocolBuffers\Enum
{
  // @@protoc_insertion_point(traits:.service.message.common.SourceEnum)
  
  const PCWEB = 1;
  const ANDROID_SHOP = 2;
  const IOS_SHOP = 3;
  const CORE = 4;
  const MERCHANT = 5;
  const CUSTOMER = 6;
  const ANDROID_CASH = 7;
  const SYNC = 8;
  const SYNC_PROCESS = 9;
  const IOS_DRIVER = 10;
  
  // @@protoc_insertion_point(const_scope:.service.message.common.SourceEnum)
  
  // @@protoc_insertion_point(class_scope:.service.message.common.SourceEnum)
  
  /**
   * @return \ProtocolBuffers\EnumDescriptor
   */
  public static function getEnumDescriptor()
  {
    static $descriptor;
    if (!$descriptor) {
      $builder = new \ProtocolBuffers\EnumDescriptorBuilder();
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::PCWEB,
        "name"  => 'PCWEB',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::ANDROID_SHOP,
        "name"  => 'ANDROID_SHOP',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::IOS_SHOP,
        "name"  => 'IOS_SHOP',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::CORE,
        "name"  => 'CORE',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::MERCHANT,
        "name"  => 'MERCHANT',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::CUSTOMER,
        "name"  => 'CUSTOMER',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::ANDROID_CASH,
        "name"  => 'ANDROID_CASH',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::SYNC,
        "name"  => 'SYNC',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::SYNC_PROCESS,
        "name"  => 'SYNC_PROCESS',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::IOS_DRIVER,
        "name"  => 'IOS_DRIVER',
      )));
      // @@protoc_insertion_point(builder_scope:.service.message.common.SourceEnum)
      $descriptor = $builder->build();
    }
    return $descriptor;
  }
}
