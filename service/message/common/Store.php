<?php
namespace service\message\common;

// @@protoc_insertion_point(namespace:.service.message.common.Store)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: common/Store.proto
 *
 * -*- magic methods -*-
 *
 * @method string getWholesalerId()
 * @method void setWholesalerId(\string $value)
 * @method string getWholesalerName()
 * @method void setWholesalerName(\string $value)
 * @method string getIcon()
 * @method void setIcon(\string $value)
 * @method string getLogo()
 * @method void setLogo(\string $value)
 * @method array getImage()
 * @method void appendImage(\string $value)
 * @method array getPhone()
 * @method void appendPhone(\string $value)
 * @method string getAddress()
 * @method void setAddress(\string $value)
 * @method string getDescription()
 * @method void setDescription(\string $value)
 * @method string getArea()
 * @method void setArea(\string $value)
 * @method string getDeliveryTime()
 * @method void setDeliveryTime(\string $value)
 * @method string getMinTradeAmount()
 * @method void setMinTradeAmount(\string $value)
 * @method string getBusinessLicenseImg()
 * @method void setBusinessLicenseImg(\string $value)
 * @method string getOperateTime()
 * @method void setOperateTime(\string $value)
 * @method string getCustomerServicePhone()
 * @method void setCustomerServicePhone(\string $value)
 * @method string getBusinessLicenseCode()
 * @method void setBusinessLicenseCode(\string $value)
 * @method string getTaxRegistrationCertificateImg()
 * @method void setTaxRegistrationCertificateImg(\string $value)
 * @method string getOrganizationCodeCertificateImg()
 * @method void setOrganizationCodeCertificateImg(\string $value)
 * @method string getBusinessCategory()
 * @method void setBusinessCategory(\string $value)
 * @method string getRebates()
 * @method void setRebates(\string $value)
 * @method string getRebatesText()
 * @method void setRebatesText(\string $value)
 * @method string getCity()
 * @method void setCity(\string $value)
 * @method array getTags()
 * @method void appendTags(\service\message\common\Tag $value)
 * @method array getBanner()
 * @method void appendBanner(\service\message\common\Image $value)
 * @method string getDeliveryText()
 * @method void setDeliveryText(\string $value)
 * @method array getMarketingTags()
 * @method void appendMarketingTags(\service\message\common\Tag $value)
 * @method array getCategoryTags()
 * @method void appendCategoryTags(\service\message\common\Tag $value)
 * @method string getCompensationService()
 * @method void setCompensationService(\string $value)
 * @method array getPromotionMessage()
 * @method void appendPromotionMessage(\string $value)
 * @method \service\message\common\CouponReceiveLayout getCouponReceiveLayout()
 * @method void setCouponReceiveLayout(\service\message\common\CouponReceiveLayout $value)
 * @method \service\message\merchant\HomePageConfig getHomepageConfig()
 * @method void setHomepageConfig(\service\message\merchant\HomePageConfig $value)
 * @method array getPromotionMessageInTag()
 * @method void appendPromotionMessageInTag(\service\message\common\Tag $value)
 * @method string getStoreCategory()
 * @method void setStoreCategory(\string $value)
 */
class Store extends \ProtocolBuffers\Message
{
  // @@protoc_insertion_point(traits:.service.message.common.Store)
  
  /**
   * @var string $wholesaler_id
   * @tag 2
   * @label required
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $wholesaler_id;
  
  /**
   * @var string $wholesaler_name
   * @tag 3
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $wholesaler_name;
  
  /**
   * @var string $icon
   * @tag 4
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $icon;
  
  /**
   * @var string $logo
   * @tag 5
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $logo;
  
  /**
   * @var array $image
   * @tag 6
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $image;
  
  /**
   * @var array $phone
   * @tag 7
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $phone;
  
  /**
   * @var string $address
   * @tag 8
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $address;
  
  /**
   * @var string $description
   * @tag 9
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $description;
  
  /**
   * @var string $area
   * @tag 10
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $area;
  
  /**
   * @var string $delivery_time
   * @tag 11
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $delivery_time;
  
  /**
   * @var string $min_trade_amount
   * @tag 12
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $min_trade_amount;
  
  /**
   * @var string $business_license_img
   * @tag 13
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $business_license_img;
  
  /**
   * @var string $operate_time
   * @tag 14
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $operate_time;
  
  /**
   * @var string $customer_service_phone
   * @tag 15
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $customer_service_phone;
  
  /**
   * @var string $business_license_code
   * @tag 16
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $business_license_code;
  
  /**
   * @var string $tax_registration_certificate_img
   * @tag 17
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $tax_registration_certificate_img;
  
  /**
   * @var string $organization_code_certificate_img
   * @tag 18
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $organization_code_certificate_img;
  
  /**
   * @var string $business_category
   * @tag 19
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $business_category;
  
  /**
   * @var string $rebates
   * @tag 20
   * @label optional
   * @type \ProtocolBuffers::TYPE_FLOAT
   **/
  protected $rebates;
  
  /**
   * @var string $rebates_text
   * @tag 21
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $rebates_text;
  
  /**
   * @var string $city
   * @tag 22
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $city;
  
  /**
   * @var array $tags
   * @tag 23
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\Tag
   **/
  protected $tags;
  
  /**
   * @var array $banner
   * @tag 24
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\Image
   **/
  protected $banner;
  
  /**
   * @var string $delivery_text
   * @tag 25
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $delivery_text;
  
  /**
   * @var array $marketing_tags
   * @tag 26
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\Tag
   **/
  protected $marketing_tags;
  
  /**
   * @var array $category_tags
   * @tag 27
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\Tag
   **/
  protected $category_tags;
  
  /**
   * @var string $compensation_service
   * @tag 28
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $compensation_service;
  
  /**
   * @var array $promotion_message
   * @tag 30
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $promotion_message;
  
  /**
   * @var \service\message\common\CouponReceiveLayout $coupon_receive_layout
   * @tag 31
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   **/
  protected $coupon_receive_layout;
  
  /**
   * @var \service\message\merchant\HomePageConfig $homepage_config
   * @tag 32
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   **/
  protected $homepage_config;
  
  /**
   * @var array $promotion_message_in_tag
   * @tag 33
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\Tag
   **/
  protected $promotion_message_in_tag;
  
  /**
   * @var string $store_category
   * @tag 34
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $store_category;
  
  
  // @@protoc_insertion_point(properties_scope:.service.message.common.Store)

  // @@protoc_insertion_point(class_scope:.service.message.common.Store)

  /**
   * get descriptor for protocol buffers
   * 
   * @return \ProtocolBuffersDescriptor
   */
  public static function getDescriptor()
  {
    static $descriptor;
    
    if (!isset($descriptor)) {
      $desc = new \ProtocolBuffers\DescriptorBuilder();
      $desc->addField(2, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "wholesaler_id",
        "required" => true,
        "optional" => false,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(3, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "wholesaler_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(4, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "icon",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(5, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "logo",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(6, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "image",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(7, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "phone",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(8, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "address",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(9, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "description",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(10, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "area",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(11, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "delivery_time",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(12, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "min_trade_amount",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(13, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "business_license_img",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(14, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "operate_time",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(15, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "customer_service_phone",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(16, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "business_license_code",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(17, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "tax_registration_certificate_img",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(18, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "organization_code_certificate_img",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(19, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "business_category",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(20, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_FLOAT,
        "name"     => "rebates",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(21, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "rebates_text",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(22, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "city",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(23, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "tags",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\Tag',
      )));
      $desc->addField(24, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "banner",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\Image',
      )));
      $desc->addField(25, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "delivery_text",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(26, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "marketing_tags",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\Tag',
      )));
      $desc->addField(27, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "category_tags",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\Tag',
      )));
      $desc->addField(28, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "compensation_service",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(30, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "promotion_message",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(31, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "coupon_receive_layout",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\CouponReceiveLayout',
      )));
      $desc->addField(32, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "homepage_config",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\merchant\HomePageConfig',
      )));
      $desc->addField(33, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "promotion_message_in_tag",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\Tag',
      )));
      $desc->addField(34, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "store_category",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      // @@protoc_insertion_point(builder_scope:.service.message.common.Store)

      $descriptor = $desc->build();
    }
    return $descriptor;
  }

}
