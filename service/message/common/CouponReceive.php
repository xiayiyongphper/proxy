<?php
namespace service\message\common;

// @@protoc_insertion_point(namespace:.service.message.common.CouponReceive)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: common/CouponReceive.proto
 *
 * -*- magic methods -*-
 *
 * @method string getRuleId()
 * @method void setRuleId(\string $value)
 * @method string getDiscountType()
 * @method void setDiscountType(\string $value)
 * @method string getDiscount()
 * @method void setDiscount(\string $value)
 * @method string getUseCondition()
 * @method void setUseCondition(\string $value)
 * @method string getType()
 * @method void setType(\string $value)
 * @method string getExpireInfo()
 * @method void setExpireInfo(\string $value)
 * @method string getCouponTitle()
 * @method void setCouponTitle(\string $value)
 */
class CouponReceive extends \ProtocolBuffers\Message
{
  // @@protoc_insertion_point(traits:.service.message.common.CouponReceive)
  
  /**
   * @var string $rule_id
   * @tag 1
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $rule_id;
  
  /**
   * @var string $discount_type
   * @tag 2
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $discount_type;
  
  /**
   * @var string $discount
   * @tag 3
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $discount;
  
  /**
   * @var string $use_condition
   * @tag 4
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $use_condition;
  
  /**
   * @var string $type
   * @tag 5
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $type;
  
  /**
   * @var string $expire_info
   * @tag 6
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $expire_info;
  
  /**
   * @var string $coupon_title
   * @tag 7
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $coupon_title;
  
  
  // @@protoc_insertion_point(properties_scope:.service.message.common.CouponReceive)

  // @@protoc_insertion_point(class_scope:.service.message.common.CouponReceive)

  /**
   * get descriptor for protocol buffers
   * 
   * @return \ProtocolBuffersDescriptor
   */
  public static function getDescriptor()
  {
    static $descriptor;
    
    if (!isset($descriptor)) {
      $desc = new \ProtocolBuffers\DescriptorBuilder();
      $desc->addField(1, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "rule_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(2, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "discount_type",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(3, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "discount",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(4, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "use_condition",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(5, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "type",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(6, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "expire_info",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(7, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "coupon_title",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      // @@protoc_insertion_point(builder_scope:.service.message.common.CouponReceive)

      $descriptor = $desc->build();
    }
    return $descriptor;
  }

}
