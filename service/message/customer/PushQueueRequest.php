<?php
namespace service\message\customer;

// @@protoc_insertion_point(namespace:.service.message.customer.PushQueueRequest)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: customer/PushQueueRequest.proto
 *
 * -*- magic methods -*-
 *
 * @method string getToken()
 * @method void setToken(\string $value)
 * @method string getGroupId()
 * @method void setGroupId(\string $value)
 * @method string getChannel()
 * @method void setChannel(\string $value)
 * @method string getPlatForm()
 * @method void setPlatForm(\string $value)
 * @method string getValueId()
 * @method void setValueId(\string $value)
 * @method string getParams()
 * @method void setParams(\string $value)
 * @method string getChecksum()
 * @method void setChecksum(\string $value)
 * @method string getMessage()
 * @method void setMessage(\string $value)
 * @method string getStatus()
 * @method void setStatus(\string $value)
 * @method string getPriority()
 * @method void setPriority(\string $value)
 * @method string getTypequeue()
 * @method void setTypequeue(\string $value)
 */
class PushQueueRequest extends \ProtocolBuffers\Message
{
  // @@protoc_insertion_point(traits:.service.message.customer.PushQueueRequest)
  
  /**
   * @var string $token
   * @tag 1
   * @label required
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $token;
  
  /**
   * @var string $group_id
   * @tag 2
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $group_id;
  
  /**
   * @var string $channel
   * @tag 3
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $channel;
  
  /**
   * @var string $plat_form
   * @tag 4
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $plat_form;
  
  /**
   * @var string $value_id
   * @tag 5
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $value_id;
  
  /**
   * @var string $params
   * @tag 6
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $params;
  
  /**
   * @var string $checksum
   * @tag 7
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $checksum;
  
  /**
   * @var string $message
   * @tag 8
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $message;
  
  /**
   * @var string $status
   * @tag 9
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $status;
  
  /**
   * @var string $priority
   * @tag 10
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $priority;
  
  /**
   * @var string $typequeue
   * @tag 11
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $typequeue;
  
  
  // @@protoc_insertion_point(properties_scope:.service.message.customer.PushQueueRequest)

  // @@protoc_insertion_point(class_scope:.service.message.customer.PushQueueRequest)

  /**
   * get descriptor for protocol buffers
   * 
   * @return \ProtocolBuffersDescriptor
   */
  public static function getDescriptor()
  {
    static $descriptor;
    
    if (!isset($descriptor)) {
      $desc = new \ProtocolBuffers\DescriptorBuilder();
      $desc->addField(1, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "token",
        "required" => true,
        "optional" => false,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(2, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "group_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(3, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "channel",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(4, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "plat_form",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(5, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "value_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(6, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "params",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(7, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "checksum",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(8, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "message",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(9, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "status",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(10, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "priority",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(11, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "typequeue",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      // @@protoc_insertion_point(builder_scope:.service.message.customer.PushQueueRequest)

      $descriptor = $desc->build();
    }
    return $descriptor;
  }

}
