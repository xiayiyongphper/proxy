<?php
namespace service\message\customer;

// @@protoc_insertion_point(namespace:.service.message.customer.CustomerResponse)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: customer/CustomerResponse.proto
 *
 * -*- magic methods -*-
 *
 * @method string getStatus()
 * @method void setStatus(\string $value)
 * @method string getAuthToken()
 * @method void setAuthToken(\string $value)
 * @method string getAreaId()
 * @method void setAreaId(\string $value)
 * @method string getAddress()
 * @method void setAddress(\string $value)
 * @method string getDetailAddress()
 * @method void setDetailAddress(\string $value)
 * @method string getStoreName()
 * @method void setStoreName(\string $value)
 * @method string getStorekeeper()
 * @method void setStorekeeper(\string $value)
 * @method string getStoreArea()
 * @method void setStoreArea(\string $value)
 * @method string getPhone()
 * @method void setPhone(\string $value)
 * @method string getUsername()
 * @method void setUsername(\string $value)
 * @method string getCustomerId()
 * @method void setCustomerId(\string $value)
 * @method string getProvince()
 * @method void setProvince(\string $value)
 * @method string getCity()
 * @method void setCity(\string $value)
 * @method string getDistrict()
 * @method void setDistrict(\string $value)
 * @method string getLat()
 * @method void setLat(\string $value)
 * @method string getLng()
 * @method void setLng(\string $value)
 * @method string getFillUserInfo()
 * @method void setFillUserInfo(\string $value)
 * @method string getOrdersTotalPrice()
 * @method void setOrdersTotalPrice(\string $value)
 * @method string getNotPassReason()
 * @method void setNotPassReason(\string $value)
 * @method string getReceiverName()
 * @method void setReceiverName(\string $value)
 * @method string getReceiverPhone()
 * @method void setReceiverPhone(\string $value)
 * @method string getCreatedAt()
 * @method void setCreatedAt(\string $value)
 * @method string getBalance()
 * @method void setBalance(\string $value)
 * @method string getContractor()
 * @method void setContractor(\string $value)
 * @method string getCityName()
 * @method void setCityName(\string $value)
 * @method string getAreaName()
 * @method void setAreaName(\string $value)
 * @method array getType()
 * @method void appendType(\string $value)
 * @method string getLevel()
 * @method void setLevel(\string $value)
 * @method string getDistance()
 * @method void setDistance(\string $value)
 * @method string getTypeName()
 * @method void setTypeName(\string $value)
 * @method string getLevelName()
 * @method void setLevelName(\string $value)
 * @method string getCustomerStyle()
 * @method void setCustomerStyle(\string $value)
 * @method string getBusinessLicenseImg()
 * @method void setBusinessLicenseImg(\string $value)
 * @method string getStoreFrontImg()
 * @method void setStoreFrontImg(\string $value)
 * @method string getBusinessLicenseNo()
 * @method void setBusinessLicenseNo(\string $value)
 * @method string getContractorId()
 * @method void setContractorId(\string $value)
 * @method string getStorekeeperInstoreTimes()
 * @method void setStorekeeperInstoreTimes(\string $value)
 * @method string getApplyAt()
 * @method void setApplyAt(\string $value)
 * @method string getIsVisit()
 * @method void setIsVisit(\string $value)
 * @method string getCouponAvailableCount()
 * @method void setCouponAvailableCount(\string $value)
 * @method string getFirstOrderId()
 * @method void setFirstOrderId(\string $value)
 */
class CustomerResponse extends \ProtocolBuffers\Message
{
  // @@protoc_insertion_point(traits:.service.message.customer.CustomerResponse)
  
  /**
   * @var string $status
   * @tag 1
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $status;
  
  /**
   * @var string $auth_token
   * @tag 2
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $auth_token;
  
  /**
   * @var string $area_id
   * @tag 3
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $area_id;
  
  /**
   * @var string $address
   * @tag 4
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $address;
  
  /**
   * @var string $detail_address
   * @tag 5
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $detail_address;
  
  /**
   * @var string $store_name
   * @tag 6
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $store_name;
  
  /**
   * @var string $storekeeper
   * @tag 7
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $storekeeper;
  
  /**
   * @var string $store_area
   * @tag 8
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $store_area;
  
  /**
   * @var string $phone
   * @tag 9
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $phone;
  
  /**
   * @var string $username
   * @tag 10
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $username;
  
  /**
   * @var string $customer_id
   * @tag 11
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $customer_id;
  
  /**
   * @var string $province
   * @tag 12
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $province;
  
  /**
   * @var string $city
   * @tag 13
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $city;
  
  /**
   * @var string $district
   * @tag 14
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $district;
  
  /**
   * @var string $lat
   * @tag 15
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $lat;
  
  /**
   * @var string $lng
   * @tag 16
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $lng;
  
  /**
   * @var string $fill_user_info
   * @tag 17
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $fill_user_info;
  
  /**
   * @var string $orders_total_price
   * @tag 18
   * @label optional
   * @type \ProtocolBuffers::TYPE_FLOAT
   **/
  protected $orders_total_price;
  
  /**
   * @var string $not_pass_reason
   * @tag 19
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $not_pass_reason;
  
  /**
   * @var string $receiver_name
   * @tag 20
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $receiver_name;
  
  /**
   * @var string $receiver_phone
   * @tag 21
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $receiver_phone;
  
  /**
   * @var string $created_at
   * @tag 22
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $created_at;
  
  /**
   * @var string $balance
   * @tag 23
   * @label optional
   * @type \ProtocolBuffers::TYPE_FLOAT
   **/
  protected $balance;
  
  /**
   * @var string $contractor
   * @tag 24
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $contractor;
  
  /**
   * @var string $city_name
   * @tag 25
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $city_name;
  
  /**
   * @var string $area_name
   * @tag 26
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $area_name;
  
  /**
   * @var array $type
   * @tag 27
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $type;
  
  /**
   * @var string $level
   * @tag 28
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $level;
  
  /**
   * @var string $distance
   * @tag 29
   * @label optional
   * @type \ProtocolBuffers::TYPE_FLOAT
   **/
  protected $distance;
  
  /**
   * @var string $type_name
   * @tag 30
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $type_name;
  
  /**
   * @var string $level_name
   * @tag 31
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $level_name;
  
  /**
   * @var string $customer_style
   * @tag 32
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   *
   * 0:注册超市   1:意向超市
   *
   **/
  protected $customer_style;
  
  /**
   * @var string $business_license_img
   * @tag 33
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $business_license_img;
  
  /**
   * @var string $store_front_img
   * @tag 34
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   *
   * 小店正面照片
   *
   **/
  protected $store_front_img;
  
  /**
   * @var string $business_license_no
   * @tag 35
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $business_license_no;
  
  /**
   * @var string $contractor_id
   * @tag 36
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $contractor_id;
  
  /**
   * @var string $storekeeper_instore_times
   * @tag 37
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   *
   * 店主在店时间
   *
   **/
  protected $storekeeper_instore_times;
  
  /**
   * @var string $apply_at
   * @tag 38
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $apply_at;
  
  /**
   * @var string $is_visit
   * @tag 39
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   *
   * 店铺是否可以查看，业务员APP在用，店铺列表中   1:可以查看   0：不能查看
   *
   **/
  protected $is_visit;
  
  /**
   * @var string $coupon_available_count
   * @tag 40
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   *
   * 可用优惠券数量
   *
   **/
  protected $coupon_available_count;
  
  /**
   * @var string $first_order_id
   * @tag 41
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   *
   * 首单ID
   *
   **/
  protected $first_order_id;
  
  
  // @@protoc_insertion_point(properties_scope:.service.message.customer.CustomerResponse)

  // @@protoc_insertion_point(class_scope:.service.message.customer.CustomerResponse)

  /**
   * get descriptor for protocol buffers
   * 
   * @return \ProtocolBuffersDescriptor
   */
  public static function getDescriptor()
  {
    static $descriptor;
    
    if (!isset($descriptor)) {
      $desc = new \ProtocolBuffers\DescriptorBuilder();
      $desc->addField(1, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "status",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(2, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "auth_token",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(3, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "area_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(4, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "address",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(5, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "detail_address",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(6, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "store_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(7, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "storekeeper",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(8, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "store_area",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(9, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "phone",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(10, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "username",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(11, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "customer_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(12, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "province",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(13, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "city",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(14, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "district",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(15, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "lat",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(16, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "lng",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(17, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "fill_user_info",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(18, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_FLOAT,
        "name"     => "orders_total_price",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(19, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "not_pass_reason",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(20, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "receiver_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(21, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "receiver_phone",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(22, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "created_at",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(23, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_FLOAT,
        "name"     => "balance",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(24, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "contractor",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(25, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "city_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(26, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "area_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(27, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "type",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(28, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "level",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(29, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_FLOAT,
        "name"     => "distance",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(30, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "type_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(31, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "level_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(32, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "customer_style",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(33, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "business_license_img",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(34, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "store_front_img",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(35, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "business_license_no",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(36, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "contractor_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(37, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "storekeeper_instore_times",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(38, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "apply_at",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(39, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "is_visit",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(40, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "coupon_available_count",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(41, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "first_order_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      // @@protoc_insertion_point(builder_scope:.service.message.customer.CustomerResponse)

      $descriptor = $desc->build();
    }
    return $descriptor;
  }

}
