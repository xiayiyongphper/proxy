<?php
namespace service\message\sales;

// @@protoc_insertion_point(namespace:.service.message.sales.CreateOrdersRequest)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: sales/CreateOrdersRequest.proto
 *
 * -*- magic methods -*-
 *
 * @method string getCustomerId()
 * @method void setCustomerId(\string $value)
 * @method string getAuthToken()
 * @method void setAuthToken(\string $value)
 * @method string getAppVer()
 * @method void setAppVer(\string $value)
 * @method array getItems()
 * @method void appendItems(\service\message\common\Product $value)
 * @method string getPaymentMethod()
 * @method void setPaymentMethod(\string $value)
 * @method \service\message\common\Address getAddress()
 * @method void setAddress(\service\message\common\Address $value)
 * @method string getComment()
 * @method void setComment(\string $value)
 * @method string getBalance()
 * @method void setBalance(\string $value)
 * @method string getCouponId()
 * @method void setCouponId(\string $value)
 */
class CreateOrdersRequest extends \ProtocolBuffers\Message
{
  // @@protoc_insertion_point(traits:.service.message.sales.CreateOrdersRequest)
  
  /**
   * @var string $customer_id
   * @tag 1
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $customer_id;
  
  /**
   * @var string $auth_token
   * @tag 2
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $auth_token;
  
  /**
   * @var string $app_ver
   * @tag 3
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $app_ver;
  
  /**
   * @var array $items
   * @tag 4
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\common\Product
   **/
  protected $items;
  
  /**
   * @var string $payment_method
   * @tag 5
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $payment_method;
  
  /**
   * @var \service\message\common\Address $address
   * @tag 6
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   **/
  protected $address;
  
  /**
   * @var string $comment
   * @tag 7
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $comment;
  
  /**
   * @var string $balance
   * @tag 8
   * @label optional
   * @type \ProtocolBuffers::TYPE_FLOAT
   **/
  protected $balance;
  
  /**
   * @var string $coupon_id
   * @tag 9
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $coupon_id;
  
  
  // @@protoc_insertion_point(properties_scope:.service.message.sales.CreateOrdersRequest)

  // @@protoc_insertion_point(class_scope:.service.message.sales.CreateOrdersRequest)

  /**
   * get descriptor for protocol buffers
   * 
   * @return \ProtocolBuffersDescriptor
   */
  public static function getDescriptor()
  {
    static $descriptor;
    
    if (!isset($descriptor)) {
      $desc = new \ProtocolBuffers\DescriptorBuilder();
      $desc->addField(1, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "customer_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(2, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "auth_token",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(3, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "app_ver",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(4, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "items",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\Product',
      )));
      $desc->addField(5, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "payment_method",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(6, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "address",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\Address',
      )));
      $desc->addField(7, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "comment",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(8, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_FLOAT,
        "name"     => "balance",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(9, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "coupon_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      // @@protoc_insertion_point(builder_scope:.service.message.sales.CreateOrdersRequest)

      $descriptor = $desc->build();
    }
    return $descriptor;
  }

}
