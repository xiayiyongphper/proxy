<?php
namespace service\message\driver;

// @@protoc_insertion_point(namespace:.service.message.driver.DriverOrder)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: driver/DriverOrder.proto
 *
 * -*- magic methods -*-
 *
 * @method string getDriverOrderId()
 * @method void setDriverOrderId(\string $value)
 * @method string getDriverId()
 * @method void setDriverId(\string $value)
 * @method \service\message\common\Order getOrder()
 * @method void setOrder(\service\message\common\Order $value)
 * @method string getState()
 * @method void setState(\string $value)
 * @method string getStatus()
 * @method void setStatus(\string $value)
 * @method string getCreatedAt()
 * @method void setCreatedAt(\string $value)
 * @method string getShowDelete()
 * @method void setShowDelete(\string $value)
 * @method string getIncrementId()
 * @method void setIncrementId(\string $value)
 * @method string getWholesalerId()
 * @method void setWholesalerId(\string $value)
 * @method string getWholesalerName()
 * @method void setWholesalerName(\string $value)
 * @method string getCustomerId()
 * @method void setCustomerId(\string $value)
 * @method string getCustomerName()
 * @method void setCustomerName(\string $value)
 * @method string getCustomerPhone()
 * @method void setCustomerPhone(\string $value)
 * @method string getUpdatedAt()
 * @method void setUpdatedAt(\string $value)
 * @method string getCompletedAt()
 * @method void setCompletedAt(\string $value)
 * @method string getOrderId()
 * @method void setOrderId(\string $value)
 * @method string getLat()
 * @method void setLat(\string $value)
 * @method string getLng()
 * @method void setLng(\string $value)
 * @method string getDeliveryTime()
 * @method void setDeliveryTime(\string $value)
 * @method string getStatusLabel()
 * @method void setStatusLabel(\string $value)
 * @method string getDriverName()
 * @method void setDriverName(\string $value)
 * @method string getDriverPhone()
 * @method void setDriverPhone(\string $value)
 */
class DriverOrder extends \ProtocolBuffers\Message
{
  // @@protoc_insertion_point(traits:.service.message.driver.DriverOrder)
  
  /**
   * @var string $driver_order_id
   * @tag 1
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   *
   * 订单id
   *
   **/
  protected $driver_order_id;
  
  /**
   * @var string $driver_id
   * @tag 2
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   *
   * 司机id
   *
   **/
  protected $driver_id;
  
  /**
   * @var \service\message\common\Order $order
   * @tag 3
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   **/
  protected $order;
  
  /**
   * @var string $state
   * @tag 4
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $state;
  
  /**
   * @var string $status
   * @tag 5
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $status;
  
  /**
   * @var string $created_at
   * @tag 7
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   *
   * 发货时间
   *
   **/
  protected $created_at;
  
  /**
   * @var string $show_delete
   * @tag 8
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   **/
  protected $show_delete;
  
  /**
   * @var string $increment_id
   * @tag 9
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   *
   * 订单号
   *
   **/
  protected $increment_id;
  
  /**
   * @var string $wholesaler_id
   * @tag 10
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   *
   * 供货商id
   *
   **/
  protected $wholesaler_id;
  
  /**
   * @var string $wholesaler_name
   * @tag 11
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   *
   * 供货商名字
   *
   **/
  protected $wholesaler_name;
  
  /**
   * @var string $customer_id
   * @tag 12
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   *
   * 客户id
   *
   **/
  protected $customer_id;
  
  /**
   * @var string $customer_name
   * @tag 13
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   *
   * 客户名字
   *
   **/
  protected $customer_name;
  
  /**
   * @var string $customer_phone
   * @tag 14
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   *
   * 客户电话
   *
   **/
  protected $customer_phone;
  
  /**
   * @var string $updated_at
   * @tag 15
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   *
   * 更新时间
   *
   **/
  protected $updated_at;
  
  /**
   * @var string $completed_at
   * @tag 16
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   *
   * 完成时间
   *
   **/
  protected $completed_at;
  
  /**
   * @var string $order_id
   * @tag 17
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   *
   * 订单id
   *
   **/
  protected $order_id;
  
  /**
   * @var string $lat
   * @tag 18
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $lat;
  
  /**
   * @var string $lng
   * @tag 19
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $lng;
  
  /**
   * @var string $delivery_time
   * @tag 20
   * @label optional
   * @type \ProtocolBuffers::TYPE_INT64
   *
   * 送货时长
   *
   **/
  protected $delivery_time;
  
  /**
   * @var string $status_label
   * @tag 21
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   *
   * 订单状态标签
   *
   **/
  protected $status_label;
  
  /**
   * @var string $driver_name
   * @tag 22
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   *
   * 司机的名字
   *
   **/
  protected $driver_name;
  
  /**
   * @var string $driver_phone
   * @tag 23
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   *
   * 司机的电话
   *
   **/
  protected $driver_phone;
  
  
  // @@protoc_insertion_point(properties_scope:.service.message.driver.DriverOrder)

  // @@protoc_insertion_point(class_scope:.service.message.driver.DriverOrder)

  /**
   * get descriptor for protocol buffers
   * 
   * @return \ProtocolBuffersDescriptor
   */
  public static function getDescriptor()
  {
    static $descriptor;
    
    if (!isset($descriptor)) {
      $desc = new \ProtocolBuffers\DescriptorBuilder();
      $desc->addField(1, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "driver_order_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(2, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "driver_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(3, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "order",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\common\Order',
      )));
      $desc->addField(4, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "state",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(5, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "status",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(7, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "created_at",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(8, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "show_delete",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(9, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "increment_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(10, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "wholesaler_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(11, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "wholesaler_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(12, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "customer_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(13, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "customer_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(14, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "customer_phone",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(15, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "updated_at",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(16, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "completed_at",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(17, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "order_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(18, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "lat",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(19, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "lng",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(20, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_INT64,
        "name"     => "delivery_time",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(21, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "status_label",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(22, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "driver_name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(23, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "driver_phone",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      // @@protoc_insertion_point(builder_scope:.service.message.driver.DriverOrder)

      $descriptor = $desc->build();
    }
    return $descriptor;
  }

}
