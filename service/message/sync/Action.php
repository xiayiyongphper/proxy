<?php
namespace service\message\sync;

// @@protoc_insertion_point(namespace:.service.message.sync.Action)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: sync/Action.proto
 *
 * -*- magic methods -*-
 *
 * @method \service\message\sync\Table getTable()
 * @method void setTable(\service\message\sync\Table $value)
 * @method array getWhere()
 * @method void appendWhere(\service\message\sync\Field $value)
 * @method array getFields()
 * @method void appendFields(\service\message\sync\Field $value)
 * @method \service\message\sync\Operation getOperation()
 * @method void setOperation(\service\message\sync\Operation $value)
 * @method string getTimestamp()
 * @method void setTimestamp(\string $value)
 */
class Action extends \ProtocolBuffers\Message
{
  // @@protoc_insertion_point(traits:.service.message.sync.Action)
  
  /**
   * @var \service\message\sync\Table $table
   * @tag 1
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   **/
  protected $table;
  
  /**
   * @var array $where
   * @tag 2
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\sync\Field
   **/
  protected $where;
  
  /**
   * @var array $fields
   * @tag 3
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \service\message\sync\Field
   **/
  protected $fields;
  
  /**
   * @var \service\message\sync\Operation $operation
   * @tag 4
   * @label optional
   * @type \ProtocolBuffers::TYPE_ENUM
   * @see \service\message\sync\Operation
   **/
  protected $operation;
  
  /**
   * @var string $timestamp
   * @tag 5
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $timestamp;
  
  
  // @@protoc_insertion_point(properties_scope:.service.message.sync.Action)

  // @@protoc_insertion_point(class_scope:.service.message.sync.Action)

  /**
   * get descriptor for protocol buffers
   * 
   * @return \ProtocolBuffersDescriptor
   */
  public static function getDescriptor()
  {
    static $descriptor;
    
    if (!isset($descriptor)) {
      $desc = new \ProtocolBuffers\DescriptorBuilder();
      $desc->addField(1, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "table",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\sync\Table',
      )));
      $desc->addField(2, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "where",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\sync\Field',
      )));
      $desc->addField(3, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "fields",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\service\message\sync\Field',
      )));
      $desc->addField(4, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_ENUM,
        "name"     => "operation",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(5, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "timestamp",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      // @@protoc_insertion_point(builder_scope:.service.message.sync.Action)

      $descriptor = $desc->build();
    }
    return $descriptor;
  }

}
